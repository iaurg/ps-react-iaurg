(this["webpackJsonpps-react-iaurg"]=this["webpackJsonpps-react-iaurg"]||[]).push([[0],[,,function(e,n,r){"use strict";r.d(n,"a",(function(){return o}));var t=r(0),a=r.n(t);function o(e){var n=e.htmlFor,r=e.label,t=e.required;return a.a.createElement("label",{style:{display:"block"},htmlFor:n},r," ",t&&a.a.createElement("span",{style:{color:"red"}},"*"))}},function(e,n,r){"use strict";r.d(n,"a",(function(){return p}));var t=r(26),a=r(27),o=r(29),i=r(30),l=r(0),s=r.n(l),p=function(e){Object(i.a)(r,e);var n=Object(o.a)(r);function r(){var e;Object(t.a)(this,r);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(e=n.call.apply(n,[this].concat(o))).getColor=function(n){return 100===e.props.percent?"green":e.props.percent>50?"lightgreen":"red"},e.getWidthAsPercentOfTotalWidth=function(){var n=e.props,r=n.percent,t=n.width;return parseInt(t*(r/100),10)},e}return Object(a.a)(r,[{key:"render",value:function(){var e=this.props,n=e.percent,r=e.width,t=e.height,a=void 0===t?5:t;return s.a.createElement("div",{style:{border:"1px solid lightgray",width:r}},s.a.createElement("div",{style:{height:a,width:this.getWidthAsPercentOfTotalWidth(),backgroundColor:this.getColor(n)}}))}}]),r}(l.Component)},function(e,n,r){"use strict";r.d(n,"a",(function(){return l}));var t=r(5),a=r(0),o=r.n(a),i=r(2);function l(e){var n=e.htmlId,r=e.name,a=e.label,l=e.type,s=void 0===l?"text":l,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(t.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(i.a,{htmlFor:n,label:a,required:u}),o.a.createElement("input",Object.assign({id:n,type:s,name:r,placeholder:c,value:m,onChange:d,style:h&&{border:"solid 1px red"}},f)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))}},,,function(e,n,r){"use strict";r.d(n,"a",(function(){return o}));var t=r(0),a=r.n(t);function o(){return a.a.createElement("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))}},function(e,n,r){"use strict";r.d(n,"a",(function(){return u}));var t=r(1),a=r(5),o=r(0),i=r.n(o),l=r(3),s=r(7),p=r(4);function u(e){var n=e.htmlId,r=e.value,u=e.label,d=e.error,c=e.onChange,m=e.placeholder,h=e.maxLength,g=e.showVisibilityToggle,f=e.quality,y=Object(a.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),b=Object(o.useState)(!1),w=Object(t.a)(b,2),x=w[0],v=w[1];return i.a.createElement(p.a,Object.assign({htmlId:n,label:u,placeholder:m,type:x?"text":"password",onChange:c,value:r,maxLength:h,error:d,required:!0},y),g&&i.a.createElement("a",{href:"#",onClick:function(e){v(!x),e&&e.preventDefault()},style:{marginLeft:5}},i.a.createElement(s.a,null)),r.length>0&&f&&i.a.createElement(l.a,{percent:f,width:130}))}u.defaultProps={maxLength:50,showVisibilityToggle:!1,label:"Password"}},function(e,n){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from "react";\n\n/** SVG Eye Icon */\nexport default function EyeIcon() {\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  return (\n    <svg\n      width="16"\n      height="16"\n      xmlns="http://www.w3.org/2000/svg"\n      viewBox="0 0 22 22"\n    >\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\n        <circle cx="466.08" cy="466.02" r="134.5" />\n      </g>\n    </svg>\n  );\n}\n',examples:[{name:"Example",description:"",code:"import React from 'react';\nimport EyeIcon from 'ps-react/EyeIcon';\n\nexport default function EyeIconExample() {\n  return <EyeIcon />;\n}\n"}]},{name:"HelloWorld",description:"A super lame good component just say Hello World",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:"'World'",computed:!1}}},code:"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n/** A super lame good component just say Hello World */\r\nexport default function HelloWorld ({ message }) {\r\n  return <div>Hello {message}</div>\r\n}\r\n\r\nHelloWorld.propTypes = {\r\n  /** Message to display */\r\n  message: PropTypes.string\r\n}\r\n\r\nHelloWorld.defaultProps = {\r\n  message: 'World'\r\n}\r\n",examples:[{name:"ExampleHelloWorld",description:"Custom Message",code:'import React from "react";\r\nimport HelloWorld from "ps-react/HelloWorld";\r\n\r\n/** Custom Message */\r\nexport default function exampleHelloWorld() {\r\n  return <HelloWorld message="Segredo Dev" />;\r\n}\r\n'}]},{name:"Label",description:"Label with required field display, htmlFor and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:""},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Display asterisk after label if true"}},code:'import React from "react";\nimport PropTypes from "prop-types";\n\n/** Label with required field display, htmlFor and block styling */\n\nexport default function Label({ htmlFor, label, required }) {\n  return (\n    <label style={{ display: "block" }} htmlFor={htmlFor}>\n      {label} {required && <span style={{ color: "red" }}>*</span>}\n    </label>\n  );\n}\n\nLabel.propTypes = {\n  /**HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n  /** Label text */\n  label: PropTypes.string.isRequired,\n  /** Display asterisk after label if true */\n  required: PropTypes.bool,\n};\n',examples:[{name:"ExampleOptional",description:"Optional label",code:'import React from "react";\nimport Label from "ps-react/Label";\n/** Optional label */\nexport default function ExampleOptional() {\n  return <Label htmlFor="test" label="test" />;\n}\n'},{name:"ExampleRequired",description:"Required label",code:'import React from "react";\nimport Label from "ps-react/Label";\n/** Required label */\nexport default function ExampleRequired() {\n  return <Label htmlFor="test" label="test" required />;\n}\n'}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:"'Password'",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport ProgressBar from '../ProgressBar'\nimport EyeIcon from '../EyeIcon'\nimport TextInput from '../TextInput'\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nexport default function PasswordInput ({ htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props }) {\n  const [showPassword, setShowPassword] = useState(false)\n\n  function toggleShowPassword (event) {\n    setShowPassword(!showPassword)\n    if (event) event.preventDefault()\n  }\n\n  return (\n    <TextInput\n      htmlId={htmlId}\n      label={label}\n      placeholder={placeholder}\n      type={showPassword ? 'text' : 'password'}\n      onChange={onChange}\n      value={value}\n      maxLength={maxLength}\n      error={error}\n      required\n      {...props}\n    >\n      {\n        showVisibilityToggle &&\n          <a\n            href='#'\n            onClick={toggleShowPassword}\n            style={{ marginLeft: 5 }}\n          >\n            <EyeIcon />\n          </a>\n      }\n      {\n        value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n      }\n    </TextInput>\n  )\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention. */\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n}\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n}\n",examples:[{name:"ExampleAllFeatures",description:"All features enabled",code:"import React, { useState } from 'react'\nimport PasswordInput from 'ps-react/PasswordInput'\n\n/** All features enabled */\nexport default function ExampleAllFeatures (props) {\n  const [password, setPassword] = useState('')\n\n  function getQuality () {\n    const length = password.length\n    return length > 10 ? 100 : length * 10\n  }\n\n  return (\n    <PasswordInput\n      htmlId='password-input-example-all-features'\n      name='password'\n      onChange={event => setPassword(event.target.value)}\n      value={password}\n      minLength={8}\n      placeholder='Enter password'\n      showVisibilityToggle\n      quality={getQuality()}\n      {...props}\n    />\n  )\n}\n"}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},height:{type:{name:"number"},required:!1,description:"Bar height"},width:{type:{name:"number"},required:!0,description:"Bar width"}},code:"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ProgressBar extends Component {\n  getColor = (percent) => {\n    if (this.props.percent === 100) return 'green'\n    return this.props.percent > 50 ? 'lightgreen' : 'red'\n  }\n\n  getWidthAsPercentOfTotalWidth = () => {\n    const { percent, width } = this.props\n    return parseInt(width * (percent / 100), 10)\n  }\n  \n  render() {\n    const { percent, width, height = 5 } = this.props\n    return (\n      <div style={{ border: '1px solid lightgray', width: width }}>\n      <div\n        style={{\n          height,\n          width:this.getWidthAsPercentOfTotalWidth(),\n          backgroundColor: this.getColor(percent)\n        }}\n      />\n    </div>\n    )\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n  /** Bar height */\n  height: PropTypes.number,\n  /** Bar width */\n  width: PropTypes.number.isRequired\n}\n",examples:[{name:"Example100Percent",description:"Example 100% complete Progress Bar and custom height",code:'import React from "react";\nimport ProgressBar from "ps-react/ProgressBar";\n\n/** Example 100% complete Progress Bar and custom height*/\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} height={20} />;\n}\n'},{name:"Example10Percent",description:"Example 10% complete Progress Bar",code:"import React from 'react'\nimport ProgressBar from 'ps-react/ProgressBar'\n/** Example 10% complete Progress Bar */\nexport default function Example10Percent () {\n  return <ProgressBar percent={10} width={150} />\n}\n"},{name:"Example70Percent",description:"Example 70% complete Progress Bar",code:'import React from "react";\nimport ProgressBar from "ps-react/ProgressBar";\n\n/** Example 70% complete Progress Bar */\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />;\n}\n'}]},{name:"RegistrationForm",description:"Registration form with built-in validation",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:"'Thanks for registering'",computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport TextInput from '../TextInput'\nimport PasswordInput from '../PasswordInput'\n\n/** Registration form with built-in validation */\nexport default function RegisrationForm ({ confirmationMessage = 'Thanks for registering', minPasswordLength = 8, ...props }) {\n  const [submitted, setSubmitted] = useState(false)\n  const [user, setUser] = useState({ email: '', password: '' })\n  const [errors, setErrors] = useState({})\n\n  function onChange (event) {\n    const { name, value } = event.target\n\n    setUser(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  function passwordQuality (password) {\n    if (!user.password) return null\n    if (user.password.length >= minPasswordLength) return 100\n    const percentOfMinLength = parseInt(user.password.length / minPasswordLength * 100, 10)\n    return percentOfMinLength\n  }\n\n  function validate ({ email, password }) {\n    const errors = {}\n\n    if (!email) errors.email = 'Email required'\n    if (password.length < minPasswordLength) errors.password = `Password be at least ${minPasswordLength}`\n\n    setErrors(errors)\n\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0\n    return formIsValid\n  }\n\n  function onSubmit () {\n    const formIsValid = validate(user)\n    if (formIsValid) {\n      props.onSubmit(user)\n      setSubmitted(true)\n    }\n  }\n\n  return (\n    submitted\n      ? <h2>{confirmationMessage}</h2>\n      : <div>\n        <TextInput\n          htmlId='registration-form-email'\n          name='email'\n          value={user.email}\n          onChange={onChange}\n          label='email'\n          error={errors.email}\n          required\n        />\n        <PasswordInput\n          htmlId='registration-form-password'\n          name='password'\n          value={user.password}\n          onChange={onChange}\n          quality={passwordQuality(user.password)}\n          showVisibilityToggle\n          maxLength={50}\n          error={errors.password}\n        />\n\n        <input type='submit' value='Register' onClick={onSubmit} />\n      </div>\n  )\n}\n\nRegisrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n\n  minPasswordLength: PropTypes.number\n}\n",examples:[{name:"ExampleRegistrationForm",description:"",code:"import React from 'react'\r\nimport RegistrationForm from 'ps-react/RegistrationForm'\r\n\r\nexport default function ExampleRegistrationForm () {\r\n  function onSubmit (user) {\r\n    console.log(user)\r\n  }\r\n  return (\r\n    <RegistrationForm onSubmit={onSubmit} />\r\n  )\r\n}\r\n"}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:"'text'",computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Label from '../Label'\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nexport default function TextInput ({\n  htmlId,\n  name,\n  label,\n  type = 'text',\n  required = false,\n  onChange,\n  placeholder,\n  value,\n  error,\n  children,\n  ...props\n}) {\n  return (\n    <div style={{ marginBottom: 16 }}>\n      <Label htmlFor={htmlId} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        style={error && { border: 'solid 1px red' }}\n        {...props}\n      />\n      {children}\n      {error && (\n        <div className='error' style={{ color: 'red' }}>\n          {error}\n        </div>\n      )}\n    </div>\n  )\n}\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n}\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from "react";\nimport TextInput from "ps-react/TextInput";\n\n/** Required TextBox with error */\nexport default function ExampleError() {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n      required\n      error="First name is required."\n    />\n  );\n}\n'},{name:"ExampleOptional",description:"Optional TextBox",code:'import React from "react";\nimport TextInput from "ps-react/TextInput";\n\n/** Optional TextBox */\nexport default function ExampleOptional() {\n  return (\n    <TextInput\n      htmlId="example-optional"\n      label="First Name"\n      name="firstname"\n      onChange={() => {}}\n    />\n  );\n}\n'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:"'text'",computed:!1},{value:"'number'",computed:!1},{value:"'password'",computed:!1}]},required:!1,description:"Input type",defaultValue:{value:"'text'",computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Label from '../Label'\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\r\nexport default function TextInputBEM ({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = 'text',\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className='textinput'>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && 'textinput__input--state-error'}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && (\r\n        <div className='textinput__error'>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputBEM.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(['text', 'number', 'password']),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n}\r\n",examples:[{name:"ExampleError",description:"Required TextBox with error",code:"import React from 'react';\nimport TextInputBEM from 'ps-react/TextInputBEM';\n\n/** Required TextBox with error */\nexport default function ExampleError () {\n  return (\n    <TextInputBEM\n      htmlId='example-optional'\n      label='First Name'\n      name='firstname'\n      onChange={() => {}}\n      required\n      error='First name is required.'\n    />\n  )\n}\n"}]}]},,,function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(7);function i(){return a.a.createElement(o.a,null)}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(2);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test"})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(2);function i(){return a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return l}));var t=r(1),a=r(0),o=r.n(a),i=r(8);function l(e){var n=Object(a.useState)(""),r=Object(t.a)(n,2),l=r[0],s=r[1];return o.a.createElement(i.a,Object.assign({htmlId:"password-input-example-all-features",name:"password",onChange:function(e){return s(e.target.value)},value:l,minLength:8,placeholder:"Enter password",showVisibilityToggle:!0,quality:function(){var e=l.length;return e>10?100:10*e}()},e))}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(3);function i(){return a.a.createElement(o.a,{percent:100,width:150,height:20})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(3);function i(){return a.a.createElement(o.a,{percent:10,width:150})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(3);function i(){return a.a.createElement(o.a,{percent:70,width:150})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(4);function i(){return a.a.createElement(o.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t),o=r(4);function i(){return a.a.createElement(o.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){}})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return i}));var t=r(0),a=r.n(t);function o(e){var n=e.message;return a.a.createElement("div",null,"Hello ",n)}function i(){return a.a.createElement(o,{message:"Segredo Dev"})}o.defaultProps={message:"World"}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return c}));var t=r(0),a=r.n(t),o=r(6),i=r(28),l=r(1),s=r(5),p=r(4),u=r(8);function d(e){var n=e.confirmationMessage,r=void 0===n?"Thanks for registering":n,d=e.minPasswordLength,c=void 0===d?8:d,m=Object(s.a)(e,["confirmationMessage","minPasswordLength"]),h=Object(t.useState)(!1),g=Object(l.a)(h,2),f=g[0],y=g[1],b=Object(t.useState)({email:"",password:""}),w=Object(l.a)(b,2),x=w[0],v=w[1],E=Object(t.useState)({}),P=Object(l.a)(E,2),q=P[0],T=P[1];function I(e){var n=e.target,r=n.name,t=n.value;v((function(e){return Object(i.a)({},e,Object(o.a)({},r,t))}))}return f?a.a.createElement("h2",null,r):a.a.createElement("div",null,a.a.createElement(p.a,{htmlId:"registration-form-email",name:"email",value:x.email,onChange:I,label:"email",error:q.email,required:!0}),a.a.createElement(u.a,{htmlId:"registration-form-password",name:"password",value:x.password,onChange:I,quality:(x.password,x.password?x.password.length>=c?100:parseInt(x.password.length/c*100,10):null),showVisibilityToggle:!0,maxLength:50,error:q.password}),a.a.createElement("input",{type:"submit",value:"Register",onClick:function(){(function(e){var n=e.email,r=e.password,t={};return n||(t.email="Email required"),r.length<c&&(t.password="Password be at least ".concat(c)),T(t),0===Object.getOwnPropertyNames(t).length})(x)&&(m.onSubmit(x),y(!0))}}))}function c(){return a.a.createElement(d,{onSubmit:function(e){console.log(e)}})}},function(e,n,r){"use strict";r.r(n),r.d(n,"default",(function(){return s}));var t=r(0),a=r.n(t),o=(r(38),r(5)),i=r(2);function l(e){var n=e.htmlId,r=e.name,t=e.label,l=e.type,s=void 0===l?"text":l,p=e.required,u=void 0!==p&&p,d=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,f=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return a.a.createElement("div",{className:"textinput"},a.a.createElement(i.a,{htmlFor:n,label:t,required:u}),a.a.createElement("input",Object.assign({id:n,type:s,name:r,placeholder:c,value:m,onChange:d,className:h&&"textinput__input--state-error"},f)),g,h&&a.a.createElement("div",{className:"textinput__error"},h))}function s(){return a.a.createElement(l,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},,,,,,,,function(e,n,r){e.exports=r(40)},,,,,function(e,n,r){},function(e,n,r){var t={"./EyeIcon/Example":12,"./EyeIcon/Example.js":12,"./HelloWorld/ExampleHelloWorld":21,"./HelloWorld/ExampleHelloWorld.js":21,"./Label/ExampleOptional":13,"./Label/ExampleOptional.js":13,"./Label/ExampleRequired":14,"./Label/ExampleRequired.js":14,"./PasswordInput/ExampleAllFeatures":15,"./PasswordInput/ExampleAllFeatures.js":15,"./ProgressBar/Example100Percent":16,"./ProgressBar/Example100Percent.js":16,"./ProgressBar/Example10Percent":17,"./ProgressBar/Example10Percent.js":17,"./ProgressBar/Example70Percent":18,"./ProgressBar/Example70Percent.js":18,"./RegistrationForm/ExampleRegistrationForm":22,"./RegistrationForm/ExampleRegistrationForm.js":22,"./TextInput/ExampleError":19,"./TextInput/ExampleError.js":19,"./TextInput/ExampleOptional":20,"./TextInput/ExampleOptional.js":20,"./TextInputBEM/ExampleError":23,"./TextInputBEM/ExampleError.js":23};function a(e){var n=o(e);return r(n)}function o(e){if(!r.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id=37},function(e,n,r){},,function(e,n,r){"use strict";r.r(n);var t=r(0),a=r.n(t),o=r(24),i=r.n(o),l=(r(36),r(1));function s(e){var n=e.components;return a.a.createElement("ul",{className:"navigation"},n.map((function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))})))}var p=r(10),u=r.n(p),d=r(25),c=r.n(d);function m(e){var n=e.children,r=Object(t.useRef)(null);return Object(t.useEffect)((function(){u.a.registerLanguage("javascript",c.a),u.a.highlightBlock(r)}),[]),a.a.createElement("pre",{ref:function(e){r=e}},a.a.createElement("code",null,n))}function h(e){var n=e.example,o=n.code,i=n.description,s=n.name,p=e.componentName,u=Object(t.useState)(!1),d=Object(l.a)(u,2),c=d[0],h=d[1],g=r(37)("./".concat(p,"/").concat(s)).default;return a.a.createElement("div",{className:"example"},i&&a.a.createElement("h4",null,i),a.a.createElement(g,null),a.a.createElement("p",null,a.a.createElement("button",{onClick:function(e){e.preventDefault(),h(!c)}},c?"Hide":"Show"," Code")),c&&a.a.createElement(m,null,o))}function g(e){var n=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(n).map((function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,n[e].description),a.a.createElement("td",null,n[e].type.name),a.a.createElement("td",null,n[e].defaultValue&&n[e].defaultValue.value),a.a.createElement("td",null,n[e].required&&"X"))}))))}function f(e){var n=e.component,r=n.name,t=n.description,o=n.props,i=n.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,r),a.a.createElement("p",null,t),a.a.createElement("h3",null,"Example",i.length>1&&"s"),i.length>0?i.map((function(e){return a.a.createElement(h,{key:e.code,example:e,componentName:r})})):"No example exist",a.a.createElement("h3",null,"Props"),o?a.a.createElement(g,{props:o}):"This component accept no props")}var y=r(9),b=r.n(y);function w(){var e=Object(t.useState)(window.location.hash.substr(1)),n=Object(l.a)(e,2),r=n[0],o=n[1];Object(t.useEffect)((function(){window.addEventListener("hashchange",(function(){o(window.location.hash.substr(1))}))}),[o]);var i=r?b.a.filter((function(e){return e.name===r}))[0]:b.a[0];return a.a.createElement("div",null,a.a.createElement(s,{components:b.a.map((function(e){return e.name}))}),a.a.createElement(f,{component:i}))}r(39),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(w,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[31,1,2]]]);
//# sourceMappingURL=main.c16edfcb.chunk.js.map